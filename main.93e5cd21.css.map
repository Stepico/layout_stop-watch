{"version":3,"sources":["styles\\blocks\\clock.scss","styles\\utils\\_mixins.scss","styles\\utils\\_variables.scss","styles\\utils\\_functions.scss"],"names":[],"mappings":"AAAA,OCCE,WCDe,CDEf,YCFe,CDGf,iBAAkB,CDAlB,iBAAkB,CAClB,YAAa,CACb,qBAAsB,CACtB,qBAAsB,CACtB,WAAY,CAEZ,oBCRA,UCAmB,CDCnB,WCDmB,CDEnB,iBAAkB,CDShB,qBAAsB,CACtB,WAAY,CAGd,sBACE,iBAAkB,CAClB,UEhB4B,CFiB5B,YEhB0B,CFiB1B,UGnBqC,CHoBrC,QGRkE,CHUlE,qBAAsB,CAEtB,0BGhB6C,CHiB7C,qCAA2C,CAG7C,sBACE,iBAAkB,CAClB,UE7B4B,CF8B5B,YAA2B,CAC3B,UGhCqC,CHiCrC,QAAmE,CAEnE,oBAAsB,CAEtB,0BAAyE,CACzE,oCAAqC,CAIzC,gBACE,GACE,mBAAoB,CAGtB,GACE,uBAAyB,CAAA","file":"main.93e5cd21.css","sourceRoot":"..\\src","sourcesContent":[".clock {\n  @include circle($clockSize);\n\n  position: relative;\n  display: flex;\n  background-color: #fea;\n  border: 1px solid #000;\n  margin: auto;\n\n  &__start-point {\n    @include circle($clockStartSize);\n\n    background-color: #aeb;\n    margin: auto;\n  }\n\n  &__seconds-arrow {\n    position: absolute;\n    width: $arrowWidth;\n    height: $arrowHeight;\n    left: calcLeft($arrowWidth, $clockSize);\n    top: calcArrowTop($clockSize, $arrowHeight, $clockStartSize);\n\n    background-color: #0af;\n\n    transform-origin: calcWiOrig($arrowWidth) calcHeOrig($arrowHeight);\n    animation: move 60s steps(60, end) infinite;\n  }\n\n  &__minutes-arrow {\n    position: absolute;\n    width: $arrowWidth;\n    height: $arrowHeight - 40px;\n    left: calcLeft($arrowWidth, $clockSize);\n    top: calcArrowTop($clockSize, $arrowHeight, $clockStartSize) + 40px;\n\n    background-color: #f00;\n\n    transform-origin: calcWiOrig($arrowWidth) calcHeOrig($arrowHeight) - 40px;\n    animation: move 3600s linear infinite;\n  }\n}\n\n@keyframes move {\n  from {\n    transform: rotate(0);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n","@mixin circle($size) {\n  width: $size;\n  height: $size;\n  border-radius: 50%;\n}\n","$clockSize: 500px;\n$clockStartSize: 30px;\n$arrowWidth: $clockStartSize / 3;\n$arrowHeight: $clockSize / 2.5;\n","@function calcLeft($arrowWidth, $clockWidth) {\n  @return ($clockWidth - $arrowWidth) / 2;\n}\n\n@function calcWiOrig($clockArrowWidth) {\n  @return $clockArrowWidth / 2;\n}\n\n@function calcHeOrig($clockArrowHeight) {\n  @return $clockArrowHeight + $clockStartSize / 2;\n}\n\n@function calcArrowTop($clockSize, $clockArrowHeight, $clockStartSize) {\n  @return ($clockSize - ($clockArrowHeight * 2 + $clockStartSize)) / 2;\n}\n"]}